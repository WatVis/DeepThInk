{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DrawCanvas from \"./components/DrawCanvas\";\nimport Slider from '@react-native-community/slider';\nimport axios from 'axios';\nimport colorMap from \"./constants/colorMap.js\";\nimport styleTransferOptions from \"./constants/styleTransferOptions.js\";\nimport messageKinds from \"./constants/messageKinds.js\";\nimport { onOpen, onClose, onMessage, onError, sendStroke, sendStrokeEnd, sendStrokeStart } from \"./api/websocketApi.js\";\nimport { sendRequest, sendRequestStyle } from \"./api/modelApi.js\";\nimport { hello, generateStyle } from \"./styles/styles.js\";\nvar device = Dimensions.get('window');\nvar socket = new WebSocket('ws://10.0.2.2:8080/ws');\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      imageData: 'data:image/png;base64,',\n      generatedImageData: 'data:image/png;base64,',\n      stylizedImageData: 'data:image/png;base64,',\n      displayedImageData: 'data:image/png;base64,',\n      style: 'none',\n      color: '#384f83',\n      thickness: 10,\n      ownStroke: [],\n      collaboratorStroke: []\n    };\n\n    _this.grabPixels = function () {\n      _this.canvas.getBase64('png', false, true, false, false, function (_err, result) {\n        var resultImage = \"\" + result;\n\n        _this.setState(function (prevState) {\n          return _objectSpread(_objectSpread({}, prevState), {}, {\n            imageData: resultImage\n          });\n        }, _this.sendRequestHelper);\n      });\n    };\n\n    _this.sendRequestHelper = function _callee() {\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              socket.send(JSON.stringify({\n                kind: messageKinds.MESSAGE_GENERATE,\n                data: {\n                  imageData: _this.state.imageData\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendRequestStyleHelper = function _callee2(newStyle) {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              socket.send(JSON.stringify({\n                kind: messageKinds.MESSAGE_STYLIZE,\n                data: {\n                  imageData: _this.state.generatedImageData,\n                  style: newStyle\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleThickness = function (sliderValue) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          thickness: sliderValue\n        });\n      });\n\n      console.log('thickness is now', sliderValue);\n    };\n\n    _this.onStrokeChangeHandler = function (x, y) {\n      sendStroke(socket, {\n        x: x,\n        y: y\n      }, _this.state.color, _this.state.thickness);\n    };\n\n    _this.onStrokeEndHandler = function () {\n      sendStrokeEnd(socket, _this.state.color, _this.state.thickness);\n    };\n\n    _this.onStrokeStartHandler = function (x, y) {\n      sendStrokeStart(socket);\n    };\n\n    _this.onMesageHandler = function (event) {\n      var messages = event.data.split('\\n');\n\n      for (var i = 0; i < messages.length; i++) {\n        var message = JSON.parse(messages[i]);\n\n        _this.executeMessage(message);\n      }\n    };\n\n    _this.executeMessage = function (message) {\n      switch (message.kind) {\n        case messageKinds.MESSAGE_STROKE:\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              collaboratorStroke: [].concat(_toConsumableArray(prevState.collaboratorStroke), [{\n                x: message.point.x,\n                y: message.point.y\n              }])\n            });\n          });\n\n          break;\n\n        case messageKinds.MESSAGE_STROKE_END:\n          var newPath = _this.getPathDataArray(_this.state.collaboratorStroke, message.thickness, message.color);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              collaboratorStroke: []\n            });\n          });\n\n          _this.canvas.addPath(newPath);\n\n          break;\n\n        case messageKinds.MESSAGE_GENERATE:\n          console.log('got generate mesage here', message);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              generatedImageData: message.imageData,\n              displayedImageData: message.imageData\n            });\n          });\n\n          break;\n\n        case messageKinds.MESSAGE_STYLIZE:\n          console.log('iamge staylzize', message);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              style: message.style,\n              stylizedImageData: message.imageData,\n              displayedImageData: message.imageData\n            });\n          });\n\n          break;\n      }\n    };\n\n    _this.getPathData = function (x, y, width, color) {\n      return {\n        drawer: null,\n        size: {\n          width: _this.canvas._size.width,\n          height: _this.canvas._size.height\n        },\n        path: {\n          data: [x.toString() + \",\" + y.toString()],\n          width: width,\n          color: color,\n          id: parseInt(Math.random() * 100000000)\n        }\n      };\n    };\n\n    _this.getPathDataArray = function (data, width, color) {\n      parsedArr = [];\n\n      for (var i = 0; i < data.length; i++) {\n        parsedArr.push(data[i].x + \",\" + data[i].y);\n      }\n\n      return {\n        drawer: null,\n        size: {\n          width: _this.canvas._size.width,\n          height: _this.canvas._size.height\n        },\n        path: {\n          data: parsedArr,\n          width: width,\n          color: color,\n          id: parseInt(Math.random() * 100000000)\n        }\n      };\n    };\n\n    _this.sendRequestHelper = _this.sendRequestHelper.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('Attempting connection');\n\n      socket.onopen = function () {\n        onOpen(socket, {\n          canvasWidth: styles.drawBox.width,\n          canvasHeight: styles.drawBox.height\n        });\n      };\n\n      socket.onclose = function (event) {\n        onClose(event);\n      };\n\n      socket.onerror = function (error) {\n        onError(error);\n      };\n\n      socket.onmessage = function (event) {\n        _this2.onMesageHandler(event);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.drawGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.drawBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }\n      }, React.createElement(DrawCanvas, {\n        style: {\n          flex: 1\n        },\n        thickness: this.state.thickness,\n        color: this.state.color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.toolGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.strokeGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#07235c',\n          fontWeight: 'bold',\n          fontSize: device.height * 0.023\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 17\n        }\n      }, \"Stroke size:\"), React.createElement(Slider, {\n        style: {\n          width: device.width * 0.15,\n          height: device.height * 0.03,\n          marginBottom: 10\n        },\n        minimumValue: 1,\n        maximumValue: device.width * device.height * (1 / Math.pow(10, 4)),\n        minimumTrackTintColor: \"#000000\",\n        maximumTrackTintColor: \"#000000\",\n        onSlidingComplete: this.handleThickness,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.tempButtons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#073ead\",\n        title: \"undo!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#073ead\",\n        title: \"redo!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#07235c\",\n        title: \"erase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 19\n        }\n      }))))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 13\n        }\n      }, colorMap.colors.map(function (obj) {\n        return React.createElement(View, {\n          style: {\n            margin: 2\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.functionButton, {\n            backgroundColor: obj.color\n          }],\n          onPress: function onPress() {\n            _this3.setState({\n              color: obj.color\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            fontSize: device.height * 0.025\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 23\n          }\n        }, obj.label)));\n      })), React.createElement(Text, {\n        style: {\n          marginRight: 8,\n          fontSize: device.height * 0.025\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 13\n        }\n      }, this.state.message)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.functionButton, {\n          backgroundColor: 'gray'\n        }],\n        onPress: function onPress() {\n          _this3.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              displayedImageData: _this3.state.generatedImageData\n            });\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 19\n        }\n      }, \" None \"))), styleTransferOptions.styles.map(function (obj) {\n        return React.createElement(View, {\n          style: {\n            margin: 2\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.functionButton, {\n            backgroundColor: 'gray'\n          }],\n          onPress: function onPress() {\n            _this3.sendRequestStyle(obj.name);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            fontSize: device.height * 0.024\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 23\n          }\n        }, obj.label)));\n      })), React.createElement(Text, {\n        style: {\n          marginRight: 8,\n          fontSize: device.height * 0.024\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }\n      }, this.state.message))), React.createElement(View, {\n        style: styles.genGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.generatedImageBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }\n      }, this.state.displayedImageData != null ? React.createElement(Image, {\n        style: styles.generatedImage,\n        source: {\n          uri: this.state.displayedImageData\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 15\n        }\n      }) : null), React.createElement(View, {\n        style: styles.genButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        color: \"#841584\",\n        title: \"Generate!\",\n        onPress: this.grabPixels.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'skyblue',\n    paddingTop: device.height * 0.02\n  },\n  drawBox: {\n    backgroundColor: 'white',\n    borderColor: 'lightblue',\n    borderWidth: 10,\n    width: device.width * 0.5,\n    height: device.height * 0.85\n  },\n  generatedImageBox: {\n    borderWidth: 10,\n    borderColor: 'lightblue',\n    width: device.width * 0.45,\n    height: device.height * 0.85\n  },\n  generatedImage: {\n    width: device.width * 0.45,\n    height: device.height * 0.85\n  },\n  functionButton: {\n    padding: 4,\n    borderRadius: 5\n  },\n  drawBoxInner: {\n    backgroundColor: 'lightblue',\n    borderColor: 'blue',\n    borderWidth: 2,\n    width: device.width * 0.45,\n    height: device.height * 0.85\n  },\n  drawGroup: {\n    flexDirection: 'column'\n  },\n  genGroup: {\n    flexDirection: 'column'\n  },\n  genButton: {\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  strokeGroup: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  tempButtons: {\n    height: 40,\n    width: 70,\n    flexDirection: 'row'\n  },\n  toolGroup: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js"],"names":["React","Component","DrawCanvas","Slider","axios","colorMap","styleTransferOptions","messageKinds","onOpen","onClose","onMessage","onError","sendStroke","sendStrokeEnd","sendStrokeStart","sendRequest","sendRequestStyle","hello","generateStyle","device","Dimensions","get","socket","WebSocket","App","props","state","imageData","generatedImageData","stylizedImageData","displayedImageData","style","color","thickness","ownStroke","collaboratorStroke","grabPixels","canvas","getBase64","_err","result","resultImage","setState","prevState","sendRequestHelper","send","JSON","stringify","kind","MESSAGE_GENERATE","data","sendRequestStyleHelper","newStyle","MESSAGE_STYLIZE","handleThickness","sliderValue","console","log","onStrokeChangeHandler","x","y","onStrokeEndHandler","onStrokeStartHandler","onMesageHandler","event","messages","split","i","length","message","parse","executeMessage","MESSAGE_STROKE","point","MESSAGE_STROKE_END","newPath","getPathDataArray","addPath","getPathData","width","drawer","size","_size","height","path","toString","id","parseInt","Math","random","parsedArr","push","bind","onopen","canvasWidth","styles","drawBox","canvasHeight","onclose","onerror","error","onmessage","container","drawGroup","flex","toolGroup","strokeGroup","fontWeight","fontSize","marginBottom","pow","tempButtons","justifyContent","paddingHorizontal","flexDirection","alignItems","colors","map","obj","margin","functionButton","backgroundColor","label","marginRight","name","genGroup","generatedImageBox","generatedImage","uri","genButton","StyleSheet","create","paddingTop","borderColor","borderWidth","padding","borderRadius","drawBoxInner"],"mappings":"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","sourcesContent":["// import React, { Component} from 'react';\n// import {View, Dimensions, StyleSheet} from \"react-native\"\n\n// import Canvas from 'react-native-canvas';\n// import DrawCanvas from './components/DrawCanvas';\n// import Slider from '@react-native-community/slider';\n// import { generateStyle } from './styles/styles';\n\n// var device = Dimensions.get('window');\n\n// const styles = StyleSheet.create(generateStyle(device));\n\n//  export default class App extends Component {\n//   state = {\n//     imageData: 'data:image/png;base64,', // raw image data of the segmentation image\n//     generatedImageData: 'data:image/png;base64,', // raw image data of the generated image\n//     stylizedImageData: 'data:image/png;base64,', // raw image data of stylized generated image\n//     displayedImageData: 'data:image/png;base64,', // raw image data of displayed image\n//     style: 'none', // selected style\n//     color: '#384f83', // pen color\n//     thickness: 10, // stroke thickness\n//   };\n\n//   handleThickness = sliderValue => {\n//     this.setState(prevState => ({\n//       ...prevState,\n//       thickness: sliderValue,\n//     }));\n//     console.log('thickness is now', sliderValue);\n//   };\n\n//   render() {\n//     return (\n//       <View style={styles.container}>\n//       <DrawCanvas thickness={this.state.thickness} color={this.state.color}/>\n//       <Slider\n//             style={{width: 200, height: 40}}\n//             minimumValue={0}\n//             maximumValue={device.width / 10}\n//             minimumTrackTintColor=\"#000000\"\n//             maximumTrackTintColor=\"#000000\"\n//             onSlidingComplete={this.handleThickness}\n//           />\n\n//       </View>\n//     )\n//   }\n// }\n\nimport React, {Component} from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  View,\n  Button,\n  Alert,\n  Dimensions,\n  Image,\n  TouchableOpacity,\n  Text,\n} from 'react-native';\n\nimport DrawCanvas from './components/DrawCanvas';\n\nimport Slider from '@react-native-community/slider';\n// import Snackbar from 'react-native-snackbar';\nimport axios from 'axios';\nimport colorMap from './constants/colorMap.js';\nimport styleTransferOptions from './constants/styleTransferOptions.js';\nimport messageKinds from './constants/messageKinds.js';\nimport {\n  onOpen,\n  onClose,\n  onMessage,\n  onError,\n  sendStroke,\n  sendStrokeEnd,\n  sendStrokeStart,\n} from './api/websocketApi.js';\nimport {sendRequest, sendRequestStyle} from './api/modelApi.js';\nimport {hello, generateStyle} from './styles/styles.js';\nvar device = Dimensions.get('window');\n\n// Connect to Go backend\nlet socket = new WebSocket('ws://10.0.2.2:8080/ws');\n\n// Create dynamic style based on device width/height\n// const styles = StyleSheet.create(generateStyle(device));\n\nexport default class App extends Component {\n  // React state: store the image data\n  state = {\n    imageData: 'data:image/png;base64,', // raw image data of the segmentation image\n    generatedImageData: 'data:image/png;base64,', // raw image data of the generated image\n    stylizedImageData: 'data:image/png;base64,', // raw image data of stylized generated image\n    displayedImageData: 'data:image/png;base64,', // raw image data of displayed image\n    style: 'none', // selected style\n    color: '#384f83', // pen color\n    thickness: 10, // stroke thickness\n    ownStroke: [], // client stroke data\n    collaboratorStroke: [], // collaborator data\n  };\n\n  constructor(props) {\n    super(props);\n    this.sendRequestHelper = this.sendRequestHelper.bind(this);\n  }\n\n  // Run when component is first rendered\n  componentDidMount() {\n    console.log('Attempting connection');\n\n    // Setup socket handlers\n    socket.onopen = () => {\n      onOpen(socket, {\n        canvasWidth: styles.drawBox.width,\n        canvasHeight: styles.drawBox.height,\n      });\n    };\n    socket.onclose = event => {\n      onClose(event);\n    };\n    socket.onerror = error => {\n      onError(error);\n    };\n\n    socket.onmessage = event => {\n      this.onMesageHandler(event);\n    };\n  }\n\n  // Fetch image data from canvas\n  // Then call sendRequest to send the data to backend\n  grabPixels = () => {\n    // Use react-native-sketch-canvas api\n    this.canvas.getBase64('png', false, true, false, false, (_err, result) => {\n      const resultImage = `${result}`;\n      // Update the state\n      this.setState(\n        prevState => ({\n          ...prevState,\n          imageData: resultImage,\n        }),\n        // Do callback to send to server after the imageData is set\n        this.sendRequestHelper,\n      );\n    });\n  };\n\n  // Send request to model server to generate painting\n  sendRequestHelper = async () => {\n    socket.send(\n      JSON.stringify({\n        kind: messageKinds.MESSAGE_GENERATE,\n        data: {\n          imageData: this.state.imageData,\n        },\n      }),\n    );\n    // sendRequest(this.state.imageData).then(generated_image => {\n    //   this.setState(prevState => ({\n    //     ...prevState,\n    //     generatedImageData: generated_image,\n    //     displayedImageData: generated_image,\n    //   }));\n    // });\n  };\n  // Send a request to the model server to stylize the generated painting\n  sendRequestStyleHelper = async newStyle => {\n    socket.send(\n      JSON.stringify({\n        kind: messageKinds.MESSAGE_STYLIZE,\n        data: {\n          imageData: this.state.generatedImageData,\n          style: newStyle,\n        },\n      }),\n    );\n    // Set new style state\n    // sendRequestStyle(this.state.generatedImageData, newStyle).then(\n    //   styled_image_data => {\n    //     this.setState(prevState => ({\n    //       ...prevState,\n    //       style: newStyle,\n    //       displayedImageData: styled_image_data,\n    //       stylizedImageData: styled_image_data,\n    //     }));\n    //   },\n    // );\n  };\n\n  handleThickness = sliderValue => {\n    this.setState(prevState => ({\n      ...prevState,\n      thickness: sliderValue,\n    }));\n    console.log('thickness is now', sliderValue);\n  };\n\n  // Send stroke point data\n  onStrokeChangeHandler = (x, y) => {\n    sendStroke(socket, {x: x, y: y}, this.state.color, this.state.thickness);\n  };\n\n  // Send stroke end signal\n  onStrokeEndHandler = () => {\n    sendStrokeEnd(socket, this.state.color, this.state.thickness);\n  };\n  onStrokeStartHandler = (x, y) => {\n    sendStrokeStart(socket);\n  };\n\n  onMesageHandler = event => {\n    var messages = event.data.split('\\n');\n\n    for (var i = 0; i < messages.length; i++) {\n      var message = JSON.parse(messages[i]);\n      // console.log('Received message is', message);\n      this.executeMessage(message);\n    }\n    // console.log('B stringified is', JSON.stringify(this.canvas.getPaths()));\n  };\n\n  executeMessage = message => {\n    // console.log(this.canvas.getPaths());\n    // console.log(this.canvas._size.width, this.canvas._size.height);\n    switch (message.kind) {\n      case messageKinds.MESSAGE_STROKE:\n        // Append collaborator stroke\n        this.setState(prevState => ({\n          ...prevState,\n          collaboratorStroke: [\n            ...prevState.collaboratorStroke,\n            {x: message.point.x, y: message.point.y},\n          ],\n        }));\n        // var newPath = this.getPathDataArray(\n        //   this.state.collaboratorStroke,\n        //   message.thickness,\n        //   message.color,\n        // );\n        // var newPath = this.getPathData(\n        //   message.point.x,\n        //   message.point.y,\n        //   message.thickness,\n        //   message.color,\n        // );\n        // this.canvas.addPath(newPath); // uncomment for live drawing\n        break;\n      case messageKinds.MESSAGE_STROKE_END:\n        var newPath = this.getPathDataArray(\n          this.state.collaboratorStroke,\n          message.thickness,\n          message.color,\n        );\n\n        this.setState(prevState => ({\n          ...prevState,\n          collaboratorStroke: [],\n        }));\n        this.canvas.addPath(newPath);\n\n        break;\n      // User receives a generated image broadcasted from another user\n      case messageKinds.MESSAGE_GENERATE:\n        console.log('got generate mesage here', message);\n        this.setState(prevState => ({\n          ...prevState,\n          generatedImageData: message.imageData,\n          displayedImageData: message.imageData,\n        }));\n        break;\n      // User received a stylized image broadcasted from another user\n      case messageKinds.MESSAGE_STYLIZE:\n        console.log('iamge staylzize', message);\n        this.setState(prevState => ({\n          ...prevState,\n          style: message.style,\n          stylizedImageData: message.imageData,\n          displayedImageData: message.imageData,\n        }));\n        break;\n    }\n  };\n\n  getPathData = (x, y, width, color) => {\n    return {\n      drawer: null,\n      size: {\n        width: this.canvas._size.width,\n        height: this.canvas._size.height,\n      },\n      path: {\n        data: [`${x.toString()},${y.toString()}`],\n        // eslint-disable-next-line radix\n        width: width,\n        color: color,\n        id: parseInt(Math.random() * 100000000),\n      },\n    };\n  };\n\n  getPathDataArray = (data, width, color) => {\n    parsedArr = [];\n    for (var i = 0; i < data.length; i++) {\n      parsedArr.push(`${data[i].x},${data[i].y}`);\n    }\n    return {\n      drawer: null,\n      size: {\n        width: this.canvas._size.width,\n        height: this.canvas._size.height,\n      },\n      path: {\n        data: parsedArr,\n        // eslint-disable-next-line radix\n        width: width,\n        color: color,\n        id: parseInt(Math.random() * 100000000),\n      },\n    };\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.drawGroup}>\n          <View style={styles.drawBox}>\n            {/* Main canvas */}\n            <DrawCanvas\n              style={{flex: 1}}\n              thickness={this.state.thickness}\n              color={this.state.color}\n            />\n\n            <View style={styles.toolGroup}>\n              {/* Thickness slider */}\n              <View style={styles.strokeGroup}>\n                <Text\n                  style={{\n                    color: '#07235c',\n                    fontWeight: 'bold',\n                    fontSize: device.height * 0.023,\n                  }}>\n                  Stroke size:\n                </Text>\n                <Slider\n                  style={{\n                    width: device.width * 0.15,\n                    height: device.height * 0.03,\n                    marginBottom: 10,\n                  }}\n                  minimumValue={1}\n                  maximumValue={\n                    device.width * device.height * (1 / Math.pow(10, 4))\n                  }\n                  minimumTrackTintColor=\"#000000\"\n                  maximumTrackTintColor=\"#000000\"\n                  onSlidingComplete={this.handleThickness}\n                />\n              </View>\n\n              <View style={styles.tempButtons}>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#073ead\" title=\"undo!\" />\n                </View>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#073ead\" title=\"redo!\" />\n                </View>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#07235c\" title=\"erase\" />\n                </View>\n              </View>\n            </View>\n          </View>\n          {/* Color palette buttons */}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <View style={{flexDirection: 'row'}}>\n              {colorMap.colors.map(obj => {\n                return (\n                  <View style={{margin: 2}}>\n                    <TouchableOpacity\n                      style={[\n                        styles.functionButton,\n                        {backgroundColor: obj.color},\n                      ]}\n                      onPress={() => {\n                        this.setState({color: obj.color});\n                      }}>\n                      <Text\n                        style={{\n                          color: 'white',\n                          fontSize: device.height * 0.025,\n                        }}>\n                        {obj.label}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n            <Text style={{marginRight: 8, fontSize: device.height * 0.025}}>\n              {this.state.message}\n            </Text>\n          </View>\n          {/* Style buttons */}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <View style={{flexDirection: 'row'}}>\n              {/* None style button */}\n              <View style={{margin: 2}}>\n                <TouchableOpacity\n                  style={[styles.functionButton, {backgroundColor: 'gray'}]}\n                  onPress={() => {\n                    this.setState(prevState => ({\n                      ...prevState,\n                      displayedImageData: this.state.generatedImageData,\n                    }));\n                  }}>\n                  <Text style={{color: 'white', fontSize: 20}}> None </Text>\n                </TouchableOpacity>\n              </View>\n              {/* Programmatically render all style options */}\n              {styleTransferOptions.styles.map(obj => {\n                return (\n                  <View style={{margin: 2}}>\n                    <TouchableOpacity\n                      style={[styles.functionButton, {backgroundColor: 'gray'}]}\n                      onPress={() => {\n                        this.sendRequestStyle(obj.name);\n                      }}>\n                      <Text\n                        style={{\n                          color: 'white',\n                          fontSize: device.height * 0.024,\n                        }}>\n                        {obj.label}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n            <Text style={{marginRight: 8, fontSize: device.height * 0.024}}>\n              {this.state.message}\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.genGroup}>\n          {/* Displayed image */}\n          <View style={styles.generatedImageBox}>\n            {this.state.displayedImageData != null ? (\n              <Image\n                style={styles.generatedImage}\n                source={{uri: this.state.displayedImageData}}\n              />\n            ) : null}\n          </View>\n          {/* Generate button */}\n          <View style={styles.genButton}>\n            <Button\n              color=\"#841584\"\n              title=\"Generate!\"\n              onPress={this.grabPixels.bind(this)}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'skyblue',\n    paddingTop: device.height * 0.02,\n  },\n\n  drawBox: {\n    backgroundColor: 'white',\n    borderColor: 'lightblue',\n    borderWidth: 10,\n    width: device.width * 0.5,\n    height: device.height * 0.85,\n  },\n  generatedImageBox: {\n    borderWidth: 10,\n    borderColor: 'lightblue',\n\n    width: device.width * 0.45,\n    height: device.height * 0.85,\n  },\n  generatedImage: {\n    width: device.width * 0.45,\n    height: device.height * 0.85,\n  },\n  functionButton: {\n    padding: 4,\n    borderRadius: 5,\n  },\n  drawBoxInner: {\n    backgroundColor: 'lightblue',\n    borderColor: 'blue',\n    borderWidth: 2,\n    // padding: 10,\n    width: device.width * 0.45,\n    height: device.height * 0.85,\n  },\n  drawGroup: {\n    flexDirection: 'column',\n  },\n  genGroup: {\n    flexDirection: 'column',\n  },\n  genButton: {\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  strokeGroup: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tempButtons: {\n    height: 40,\n    width: 70,\n    flexDirection: 'row',\n  },\n  toolGroup: {\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}