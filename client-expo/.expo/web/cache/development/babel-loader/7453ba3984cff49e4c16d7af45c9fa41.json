{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/components/DrawCanvas.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Canvas, { Image as CanvasImage } from 'react-native-canvas';\nvar width = 800;\nvar height = 800;\n\nvar DrawCanvas = function (_Component) {\n  _inherits(DrawCanvas, _Component);\n\n  var _super = _createSuper(DrawCanvas);\n\n  function DrawCanvas(props) {\n    var _this;\n\n    _classCallCheck(this, DrawCanvas);\n\n    _this.drawCanvas = React.createRef();\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(DrawCanvas, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === \"web\") {\n        return React.createElement(\"canvas\", {\n          style: {\n            width: width,\n            height: height\n          },\n          ref: this.drawCanvas,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 16\n          }\n        });\n      }\n\n      return React.createElement(Canvas, {\n        style: {\n          width: width,\n          height: height\n        },\n        ref: this.drawCanvas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return DrawCanvas;\n}(Component);\n\nexport { DrawCanvas as default };","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/components/DrawCanvas.js"],"names":["React","Component","Canvas","Image","CanvasImage","width","height","DrawCanvas","props","drawCanvas","createRef","Platform","OS"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP,IAAgBC,KAAK,IAAIC,WAAzB,QAA2C,qBAA3C;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,GAAb;;IAEqBC,U;;;;;AAEpB,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AAClB,UAAKC,UAAL,GAAkBT,KAAK,CAACU,SAAN,EAAlB;AADkB;AAEhB;;;;WAsBA,kBAAS;AACP,UAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzB,eAAO;AAAQ,UAAA,KAAK,EAAE;AAACP,YAAAA,KAAK,EAALA,KAAD;AAAQC,YAAAA,MAAM,EAANA;AAAR,WAAf;AAAgC,UAAA,GAAG,EAAE,KAAKG,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH;;AAED,aACI,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAAEJ,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,MAAM,EAANA;AAAT,SAAf;AAAkC,QAAA,GAAG,EAAE,KAAKG,UAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAGC;;;;EAlCmCR,S;;SAAnBM,U","sourcesContent":["import React, { Component } from 'react';\nimport {View, Text, Platform} from 'react-native';\nimport Canvas, {Image as CanvasImage} from 'react-native-canvas';\n\nvar width = 800;\nvar height = 800;\n\nexport default class DrawCanvas extends Component {\n \n\tconstructor(props) {\n\t\tthis.drawCanvas = React.createRef();\n\t  }\n\n    onDraw = (event) => {\n        console.log(\"hello\")\n    }\n    handleCanvas = (canvas) => {\n\n    console.log(\"canvas is\", canvas)\n      const ctx = canvas.getContext('2d');\n      const image = new CanvasImage(canvas);\n\n      \n      ctx.fillStyle = 'purple';\n      ctx.fillRect(50, 0, 100, 20);\n      ctx.lineWidth = 1;\n\n      image.addEventListener(\"touchstart\", this.onDraw, false)\n\n\n    }\n  \n   \n    render() {\n      if (Platform.OS === \"web\") {\n        return <canvas style={{width, height}} ref={this.drawCanvas} />\n    }\n    \n    return (\n        <Canvas style={{ width, height }} ref={this.drawCanvas} />\n    )\n    }\n   \n    \n  }"]},"metadata":{},"sourceType":"module"}