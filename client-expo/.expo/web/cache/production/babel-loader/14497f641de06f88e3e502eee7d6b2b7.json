{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly){symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});}keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React,{Component}from'react';import View from\"react-native-web/dist/exports/View\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Canvas from'react-native-canvas';import DrawCanvas from\"./components/DrawCanvas\";import Slider from'@react-native-community/slider';import{generateStyle}from\"./styles/styles\";var device=Dimensions.get('window');var styles=StyleSheet.create(generateStyle(device));var App=function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={imageData:'data:image/png;base64,',generatedImageData:'data:image/png;base64,',stylizedImageData:'data:image/png;base64,',displayedImageData:'data:image/png;base64,',style:'none',color:'#384f83',thickness:10};_this.handleThickness=function(sliderValue){_this.setState(function(prevState){return _objectSpread(_objectSpread({},prevState),{},{thickness:sliderValue});});console.log('thickness is now',sliderValue);};return _this;}_createClass(App,[{key:\"render\",value:function render(){return React.createElement(View,{style:styles.container},React.createElement(DrawCanvas,{thickness:this.state.thickness}),React.createElement(Slider,{style:{width:200,height:40},minimumValue:0,maximumValue:device.width/10,minimumTrackTintColor:\"#000000\",maximumTrackTintColor:\"#000000\",onSlidingComplete:this.handleThickness}));}}]);return App;}(Component);export{App as default};","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js"],"names":["React","Component","Canvas","DrawCanvas","Slider","generateStyle","device","Dimensions","get","styles","StyleSheet","create","App","state","imageData","generatedImageData","stylizedImageData","displayedImageData","style","color","thickness","handleThickness","sliderValue","setState","prevState","console","log","container","width","height"],"mappings":"s2DAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAgC,OAAhC,C,uLAGA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,UAAP,+BACA,MAAOC,CAAAA,MAAP,KAAmB,gCAAnB,CACA,OAASC,aAAT,uBAEA,GAAIC,CAAAA,MAAM,CAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,CAAb,CAEA,GAAMC,CAAAA,MAAM,CAAGC,UAAU,CAACC,MAAX,CAAkBN,aAAa,CAACC,MAAD,CAA/B,CAAf,C,GAEsBM,CAAAA,G,kSACpBC,K,CAAQ,CACNC,SAAS,CAAE,wBADL,CAENC,kBAAkB,CAAE,wBAFd,CAGNC,iBAAiB,CAAE,wBAHb,CAINC,kBAAkB,CAAE,wBAJd,CAKNC,KAAK,CAAE,MALD,CAMNC,KAAK,CAAE,SAND,CAONC,SAAS,CAAE,EAPL,C,OAURC,e,CAAkB,SAAAC,WAAW,CAAI,CAC/B,MAAKC,QAAL,CAAc,SAAAC,SAAS,wCAClBA,SADkB,MAErBJ,SAAS,CAAEE,WAFU,IAAvB,EAIAG,OAAO,CAACC,GAAR,CAAY,kBAAZ,CAAgCJ,WAAhC,EACD,C,qDAED,iBAAS,CACP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEb,MAAM,CAACkB,SAApB,EACA,oBAAC,UAAD,EAAY,SAAS,CAAE,KAAKd,KAAL,CAAWO,SAAlC,EADA,CAEA,oBAAC,MAAD,EACM,KAAK,CAAE,CAACQ,KAAK,CAAE,GAAR,CAAaC,MAAM,CAAE,EAArB,CADb,CAEM,YAAY,CAAE,CAFpB,CAGM,YAAY,CAAEvB,MAAM,CAACsB,KAAP,CAAe,EAHnC,CAIM,qBAAqB,CAAC,SAJ5B,CAKM,qBAAqB,CAAC,SAL5B,CAMM,iBAAiB,CAAE,KAAKP,eAN9B,EAFA,CADF,CAcD,C,iBAlC+BpB,S,SAAZW,G","sourcesContent":["import React, { Component} from 'react';\nimport {View, Dimensions, StyleSheet} from \"react-native\"\n\nimport Canvas from 'react-native-canvas';\nimport DrawCanvas from './components/DrawCanvas';\nimport Slider from '@react-native-community/slider';\nimport { generateStyle } from './styles/styles';\n\nvar device = Dimensions.get('window');\n\nconst styles = StyleSheet.create(generateStyle(device));\n\n export default class App extends Component {\n  state = {\n    imageData: 'data:image/png;base64,', // raw image data of the segmentation image\n    generatedImageData: 'data:image/png;base64,', // raw image data of the generated image\n    stylizedImageData: 'data:image/png;base64,', // raw image data of stylized generated image\n    displayedImageData: 'data:image/png;base64,', // raw image data of displayed image\n    style: 'none', // selected style\n    color: '#384f83', // pen color\n    thickness: 10, // stroke thickness\n  };\n\n  handleThickness = sliderValue => {\n    this.setState(prevState => ({\n      ...prevState,\n      thickness: sliderValue,\n    }));\n    console.log('thickness is now', sliderValue);\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n      <DrawCanvas thickness={this.state.thickness}/>\n      <Slider\n            style={{width: 200, height: 40}}\n            minimumValue={0}\n            maximumValue={device.width / 10}\n            minimumTrackTintColor=\"#000000\"\n            maximumTrackTintColor=\"#000000\"\n            onSlidingComplete={this.handleThickness}\n          />\n\n      </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}