{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/components/DrawCanvas.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Canvas, { Image as CanvasImage } from 'react-native-canvas';\nvar width = 800;\nvar height = 800;\n\nvar DrawCanvas = function (_Component) {\n  _inherits(DrawCanvas, _Component);\n\n  var _super = _createSuper(DrawCanvas);\n\n  function DrawCanvas() {\n    var _this;\n\n    _classCallCheck(this, DrawCanvas);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.onDraw = function (event) {\n      console.log(\"hello\");\n    };\n\n    _this.handleCanvas = function (canvas) {\n      console.log(\"canvas is\", canvas);\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'purple';\n      ctx.fillRect(50, 50, 100, 20);\n      ctx.lineWidth = 1;\n    };\n\n    return _this;\n  }\n\n  _createClass(DrawCanvas, [{\n    key: \"render\",\n    value: function render() {\n      if (Platform.OS === \"web\") {\n        return;\n        React.createElement(\"canvas\", {\n          style: {\n            width: width,\n            height: height\n          },\n          ref: this.handleCanvas,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 4\n          }\n        });\n      }\n\n      return React.createElement(Canvas, {\n        style: {\n          width: width,\n          height: height\n        },\n        ref: this.handleCanvas,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 4\n        }\n      });\n    }\n  }]);\n\n  return DrawCanvas;\n}(Component);\n\nexport { DrawCanvas as default };","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/components/DrawCanvas.js"],"names":["React","Component","Canvas","Image","CanvasImage","width","height","DrawCanvas","onDraw","event","console","log","handleCanvas","canvas","ctx","getContext","fillStyle","fillRect","lineWidth","Platform","OS"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;AAEA,OAAOC,MAAP,IAAgBC,KAAK,IAAIC,WAAzB,QAA2C,qBAA3C;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,GAAb;;IAEqBC,U;;;;;;;;;;;;;;;;UAEjBC,M,GAAS,UAACC,KAAD,EAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACH,K;;UACDC,Y,GAAe,UAACC,MAAD,EAAY;AAE3BH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBE,MAAzB;AACE,UAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AAGAD,MAAAA,GAAG,CAACE,SAAJ,GAAgB,QAAhB;AACAF,MAAAA,GAAG,CAACG,QAAJ,CAAa,EAAb,EAAiB,EAAjB,EAAqB,GAArB,EAA0B,EAA1B;AACAH,MAAAA,GAAG,CAACI,SAAJ,GAAgB,CAAhB;AAID,K;;;;;;;WAGD,kBAAS;AACP,UAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AAC/B;AACC;AAAQ,UAAA,KAAK,EAAE;AAACf,YAAAA,KAAK,EAALA,KAAD;AAAQC,YAAAA,MAAM,EAANA;AAAR,WAAf;AAAgC,UAAA,GAAG,EAAE,KAAKM,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEE;;AAED,aACD,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE;AAACP,UAAAA,KAAK,EAALA,KAAD;AAAQC,UAAAA,MAAM,EAANA;AAAR,SAAf;AAAgC,QAAA,GAAG,EAAE,KAAKM,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADC;AAGC;;;;EA9BmCX,S;;SAAnBM,U","sourcesContent":["import React, { Component } from 'react';\nimport {View, Text, Platform} from 'react-native';\nimport Canvas, {Image as CanvasImage} from 'react-native-canvas';\n\nvar width = 800;\nvar height = 800;\n\nexport default class DrawCanvas extends Component {\n \n    onDraw = (event) => {\n        console.log(\"hello\")\n    }\n    handleCanvas = (canvas) => {\n\n    console.log(\"canvas is\", canvas)\n      const ctx = canvas.getContext('2d');\n\n      \n      ctx.fillStyle = 'purple';\n      ctx.fillRect(50, 50, 100, 20);\n      ctx.lineWidth = 1;\n\n\n\n    }\n  \n   \n    render() {\n      if (Platform.OS === \"web\") {\n\t\treturn\n\t\t\t<canvas style={{width, height}} ref={this.handleCanvas} />\n         \n    }\n    \n    return (\n\t\t\t<Canvas style={{width, height}} ref={this.handleCanvas} />\n\t\t)\n    }\n   \n    \n  }"]},"metadata":{},"sourceType":"module"}