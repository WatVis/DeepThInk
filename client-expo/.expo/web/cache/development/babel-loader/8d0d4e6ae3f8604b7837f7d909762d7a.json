{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DrawCanvas from \"./components/DrawCanvas\";\nimport Slider from '@react-native-community/slider';\nimport axios from 'axios';\nimport colorMap from \"./constants/colorMap.js\";\nimport styleTransferOptions from \"./constants/styleTransferOptions.js\";\nimport messageKinds from \"./constants/messageKinds.js\";\nimport { onOpen, onClose, onMessage, onError, sendStroke, sendStrokeEnd, sendStrokeStart } from \"./api/websocketApi.js\";\nimport { sendRequest, sendRequestStyle } from \"./api/modelApi.js\";\nimport { hello, generateStyle } from \"./styles/styles.js\";\nvar device = Dimensions.get('window');\nvar socket = new WebSocket('ws://localhost:8080/ws');\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      imageData: 'data:image/png;base64,',\n      generatedImageData: 'data:image/png;base64,',\n      stylizedImageData: 'data:image/png;base64,',\n      displayedImageData: 'data:image/png;base64,',\n      style: 'none',\n      color: '#384f83',\n      thickness: 10,\n      ownStroke: [],\n      collaboratorStroke: []\n    };\n\n    _this.grabPixels = function _callee() {\n      var getImage;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              getImage = _this.refs.drawCanvasRef.getBase64().then(function (value) {\n                var resultImage = value.split(';base64,')[1];\n                console.log(\"result image is\", resultImage);\n\n                _this.setState(function (prevState) {\n                  return _objectSpread(_objectSpread({}, prevState), {}, {\n                    imageData: resultImage\n                  });\n                }, _this.sendRequestHelper);\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendRequestHelper = function _callee2() {\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              socket.send(JSON.stringify({\n                kind: messageKinds.MESSAGE_GENERATE,\n                data: {\n                  imageData: _this.state.imageData\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.sendRequestStyleHelper = function _callee3(newStyle) {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              socket.send(JSON.stringify({\n                kind: messageKinds.MESSAGE_STYLIZE,\n                data: {\n                  imageData: _this.state.generatedImageData,\n                  style: newStyle\n                }\n              }));\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleThickness = function (sliderValue) {\n      _this.setState(function (prevState) {\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          thickness: sliderValue\n        });\n      });\n\n      console.log('thickness is now', sliderValue);\n    };\n\n    _this.onMesageHandler = function (event) {\n      var messages = event.data.split('\\n');\n\n      for (var i = 0; i < messages.length; i++) {\n        var message = JSON.parse(messages[i]);\n\n        _this.executeMessage(message);\n      }\n    };\n\n    _this.executeMessage = function (message) {\n      switch (message.kind) {\n        case messageKinds.MESSAGE_STROKE:\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              collaboratorStroke: [].concat(_toConsumableArray(prevState.collaboratorStroke), [{\n                x: message.point.x,\n                y: message.point.y\n              }])\n            });\n          });\n\n          break;\n\n        case messageKinds.MESSAGE_STROKE_END:\n          var newPath = _this.getPathDataArray(_this.state.collaboratorStroke, message.thickness, message.color);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              collaboratorStroke: []\n            });\n          });\n\n          _this.canvas.addPath(newPath);\n\n          break;\n\n        case messageKinds.MESSAGE_GENERATE:\n          console.log('got generate mesage here', message);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              generatedImageData: message.imageData,\n              displayedImageData: message.imageData\n            });\n          });\n\n          break;\n\n        case messageKinds.MESSAGE_STYLIZE:\n          console.log('iamge staylzize', message);\n\n          _this.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              style: message.style,\n              stylizedImageData: message.imageData,\n              displayedImageData: message.imageData\n            });\n          });\n\n          break;\n      }\n    };\n\n    _this.sendRequestHelper = _this.sendRequestHelper.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log('Attempting connection');\n\n      socket.onopen = function () {\n        onOpen(socket, {\n          canvasWidth: styles.drawBox.width,\n          canvasHeight: styles.drawBox.height\n        });\n      };\n\n      socket.onclose = function (event) {\n        onClose(event);\n      };\n\n      socket.onerror = function (error) {\n        onError(error);\n      };\n\n      socket.onmessage = function (event) {\n        _this2.onMesageHandler(event);\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.drawGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 9\n        }\n      }, React.createElement(DrawCanvas, {\n        ref: \"drawCanvasRef\",\n        style: {\n          flex: 1\n        },\n        thickness: this.state.thickness,\n        color: this.state.color,\n        socket: socket,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }\n      }), React.createElement(View, {\n        style: styles.toolGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.strokeGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 15\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: '#07235c',\n          fontWeight: 'bold',\n          fontSize: device.height * 0.023\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 17\n        }\n      }, \"Stroke size:\"), React.createElement(Slider, {\n        style: {\n          width: device.width * 0.15,\n          height: device.height * 0.03,\n          marginBottom: 10\n        },\n        minimumValue: 1,\n        maximumValue: device.width * device.height * (1 / Math.pow(10, 4)),\n        minimumTrackTintColor: \"#000000\",\n        maximumTrackTintColor: \"#000000\",\n        onSlidingComplete: this.handleThickness,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 17\n        }\n      })), React.createElement(View, {\n        style: styles.tempButtons,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#073ead\",\n        title: \"undo!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#073ead\",\n        title: \"redo!\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 19\n        }\n      })), React.createElement(View, {\n        style: {\n          justifyContent: 'flex-end',\n          paddingHorizontal: 5\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 17\n        }\n      }, React.createElement(Button, {\n        color: \"#07235c\",\n        title: \"erase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 19\n        }\n      })))), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }\n      }, colorMap.colors.map(function (obj) {\n        return React.createElement(View, {\n          style: {\n            margin: 2\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.functionButton, {\n            backgroundColor: obj.color\n          }],\n          onPress: function onPress() {\n            _this3.setState({\n              color: obj.color\n            });\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            fontSize: device.height * 0.025\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 23\n          }\n        }, obj.label)));\n      })), React.createElement(Text, {\n        style: {\n          marginRight: 8,\n          fontSize: device.height * 0.025\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }\n      }, this.state.message)), React.createElement(View, {\n        style: {\n          flexDirection: 'row',\n          justifyContent: 'space-around',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          margin: 2\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 15\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.functionButton, {\n          backgroundColor: 'gray'\n        }],\n        onPress: function onPress() {\n          _this3.setState(function (prevState) {\n            return _objectSpread(_objectSpread({}, prevState), {}, {\n              displayedImageData: _this3.state.generatedImageData\n            });\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: 'white',\n          fontSize: 20\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 19\n        }\n      }, \" None \"))), styleTransferOptions.styles.map(function (obj) {\n        return React.createElement(View, {\n          style: {\n            margin: 2\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 19\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: [styles.functionButton, {\n            backgroundColor: 'gray'\n          }],\n          onPress: function onPress() {\n            _this3.sendRequestStyleHelper(obj.name);\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: 'white',\n            fontSize: device.height * 0.024\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 23\n          }\n        }, obj.label)));\n      })), React.createElement(Text, {\n        style: {\n          marginRight: 8,\n          fontSize: device.height * 0.024\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 13\n        }\n      }, this.state.message))), React.createElement(View, {\n        style: styles.genGroup,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.generatedImageBox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }\n      }, this.state.displayedImageData != null ? React.createElement(Image, {\n        style: styles.generatedImage,\n        source: {\n          uri: this.state.displayedImageData\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }\n      }) : null), React.createElement(View, {\n        style: styles.genButton,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        color: \"#841584\",\n        title: \"Generate!\",\n        onPress: this.grabPixels.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'skyblue',\n    paddingTop: device.height * 0.02\n  },\n  drawBox: {\n    backgroundColor: 'white',\n    borderColor: 'lightblue',\n    borderWidth: 10,\n    width: device.width * 0.5,\n    height: device.height * 0.85\n  },\n  generatedImageBox: {\n    borderWidth: 10,\n    borderColor: 'lightblue',\n    width: device.width * 0.45,\n    height: device.height * 0.85\n  },\n  generatedImage: {\n    width: device.width * 0.45,\n    height: device.height * 0.85\n  },\n  functionButton: {\n    padding: 4,\n    borderRadius: 5\n  },\n  drawGroup: {\n    flexDirection: 'column'\n  },\n  genGroup: {\n    flexDirection: 'column'\n  },\n  genButton: {\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  strokeGroup: {\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  tempButtons: {\n    height: 40,\n    width: 70,\n    flexDirection: 'row'\n  },\n  toolGroup: {\n    flexDirection: 'row'\n  }\n});","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js"],"names":["React","Component","DrawCanvas","Slider","axios","colorMap","styleTransferOptions","messageKinds","onOpen","onClose","onMessage","onError","sendStroke","sendStrokeEnd","sendStrokeStart","sendRequest","sendRequestStyle","hello","generateStyle","device","Dimensions","get","socket","WebSocket","App","props","state","imageData","generatedImageData","stylizedImageData","displayedImageData","style","color","thickness","ownStroke","collaboratorStroke","grabPixels","getImage","refs","drawCanvasRef","getBase64","then","value","resultImage","split","console","log","setState","prevState","sendRequestHelper","send","JSON","stringify","kind","MESSAGE_GENERATE","data","sendRequestStyleHelper","newStyle","MESSAGE_STYLIZE","handleThickness","sliderValue","onMesageHandler","event","messages","i","length","message","parse","executeMessage","MESSAGE_STROKE","x","point","y","MESSAGE_STROKE_END","newPath","getPathDataArray","canvas","addPath","bind","onopen","canvasWidth","styles","drawBox","width","canvasHeight","height","onclose","onerror","error","onmessage","container","drawGroup","flex","toolGroup","strokeGroup","fontWeight","fontSize","marginBottom","Math","pow","tempButtons","justifyContent","paddingHorizontal","flexDirection","alignItems","colors","map","obj","margin","functionButton","backgroundColor","label","marginRight","name","genGroup","generatedImageBox","generatedImage","uri","genButton","StyleSheet","create","paddingTop","borderColor","borderWidth","padding","borderRadius"],"mappings":"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","sourcesContent":["// import React, { Component} from 'react';\n// import {View, Dimensions, StyleSheet} from \"react-native\"\n\n// import Canvas from 'react-native-canvas';\n// import DrawCanvas from './components/DrawCanvas';\n// import Slider from '@react-native-community/slider';\n// import { generateStyle } from './styles/styles';\n\n// var device = Dimensions.get('window');\n\n// const styles = StyleSheet.create(generateStyle(device));\n\n//  export default class App extends Component {\n//   state = {\n//     imageData: 'data:image/png;base64,', // raw image data of the segmentation image\n//     generatedImageData: 'data:image/png;base64,', // raw image data of the generated image\n//     stylizedImageData: 'data:image/png;base64,', // raw image data of stylized generated image\n//     displayedImageData: 'data:image/png;base64,', // raw image data of displayed image\n//     style: 'none', // selected style\n//     color: '#384f83', // pen color\n//     thickness: 10, // stroke thickness\n//   };\n\n//   handleThickness = sliderValue => {\n//     this.setState(prevState => ({\n//       ...prevState,\n//       thickness: sliderValue,\n//     }));\n//     console.log('thickness is now', sliderValue);\n//   };\n\n//   render() {\n//     return (\n//       <View style={styles.container}>\n//       <DrawCanvas thickness={this.state.thickness} color={this.state.color}/>\n//       <Slider\n//             style={{width: 200, height: 40}}\n//             minimumValue={0}\n//             maximumValue={device.width / 10}\n//             minimumTrackTintColor=\"#000000\"\n//             maximumTrackTintColor=\"#000000\"\n//             onSlidingComplete={this.handleThickness}\n//           />\n\n//       </View>\n//     )\n//   }\n// }\n\nimport React, {Component} from 'react';\nimport {\n  AppRegistry,\n  StyleSheet,\n  View,\n  Button,\n  Alert,\n  Dimensions,\n  Image,\n  TouchableOpacity,\n  Text,\n} from 'react-native';\n\nimport DrawCanvas from './components/DrawCanvas';\n\nimport Slider from '@react-native-community/slider';\n// import Snackbar from 'react-native-snackbar';\nimport axios from 'axios';\nimport colorMap from './constants/colorMap.js';\nimport styleTransferOptions from './constants/styleTransferOptions.js';\nimport messageKinds from './constants/messageKinds.js';\nimport {\n  onOpen,\n  onClose,\n  onMessage,\n  onError,\n  sendStroke,\n  sendStrokeEnd,\n  sendStrokeStart,\n} from './api/websocketApi.js';\nimport {sendRequest, sendRequestStyle} from './api/modelApi.js';\nimport {hello, generateStyle} from './styles/styles.js';\nvar device = Dimensions.get('window');\n\n// Connect to Go backend\n// for web\nlet socket = new WebSocket('ws://localhost:8080/ws');\n// for android\n// let socket = new WebSocket('ws://10.0.2.2:8080/ws');\n\n// Create dynamic style based on device width/height\n// const styles = StyleSheet.create(generateStyle(device));\n\nexport default class App extends Component {\n  // React state: store the image data\n  state = {\n    imageData: 'data:image/png;base64,', // raw image data of the segmentation image\n    generatedImageData: 'data:image/png;base64,', // raw image data of the generated image\n    stylizedImageData: 'data:image/png;base64,', // raw image data of stylized generated image\n    displayedImageData: 'data:image/png;base64,', // raw image data of displayed image\n    style: 'none', // selected style\n    color: '#384f83', // pen color\n    thickness: 10, // stroke thickness\n    ownStroke: [], // client stroke data\n    collaboratorStroke: [], // collaborator data\n  };\n\n  constructor(props) {\n    super(props);\n    this.sendRequestHelper = this.sendRequestHelper.bind(this);\n  }\n\n  // Run when component is first rendered\n  componentDidMount() {\n    console.log('Attempting connection');\n\n    // Setup socket handlers\n    socket.onopen = () => {\n      onOpen(socket, {\n        canvasWidth: styles.drawBox.width,\n        canvasHeight: styles.drawBox.height,\n      });\n    };\n    socket.onclose = event => {\n      onClose(event);\n    };\n    socket.onerror = error => {\n      onError(error);\n    };\n\n    socket.onmessage = event => {\n      this.onMesageHandler(event);\n    };\n  }\n\n  // Fetch image data from canvas\n  // Then call sendRequest to send the data to backend\n  grabPixels = async () => {\n    var getImage = this.refs.drawCanvasRef.getBase64().then((value) => {\n      var resultImage = value.split(';base64,')[1];\n      console.log(\"result image is\", resultImage)\n        this.setState(\n          prevState => ({\n            ...prevState,\n            imageData: resultImage,\n          }),\n          // Do callback to send to server after the imageData is set\n          this.sendRequestHelper,\n        );\n    })\n    \n  };\n\n  // Send request to model server to generate painting\n  sendRequestHelper = async () => {\n    socket.send(\n      JSON.stringify({\n        kind: messageKinds.MESSAGE_GENERATE,\n        data: {\n          imageData: this.state.imageData,\n        },\n      }),\n    );\n  };\n  // Send a request to the model server to stylize the generated painting\n  sendRequestStyleHelper = async newStyle => {\n    socket.send(\n      JSON.stringify({\n        kind: messageKinds.MESSAGE_STYLIZE,\n        data: {\n          imageData: this.state.generatedImageData,\n          style: newStyle,\n        },\n      }),\n    );\n  };\n\n  handleThickness = sliderValue => {\n    this.setState(prevState => ({\n      ...prevState,\n      thickness: sliderValue,\n    }));\n    console.log('thickness is now', sliderValue);\n  };\n\n\n\n  onMesageHandler = event => {\n    var messages = event.data.split('\\n');\n\n    for (var i = 0; i < messages.length; i++) {\n      var message = JSON.parse(messages[i]);\n      // console.log('Received message is', message);\n      this.executeMessage(message);\n    }\n    // console.log('B stringified is', JSON.stringify(this.canvas.getPaths()));\n  };\n\n  executeMessage = message => {\n    // console.log(this.canvas.getPaths());\n    // console.log(this.canvas._size.width, this.canvas._size.height);\n    switch (message.kind) {\n      case messageKinds.MESSAGE_STROKE:\n        // Append collaborator stroke\n        this.setState(prevState => ({\n          ...prevState,\n          collaboratorStroke: [\n            ...prevState.collaboratorStroke,\n            {x: message.point.x, y: message.point.y},\n          ],\n        }));\n        break;\n      case messageKinds.MESSAGE_STROKE_END:\n        var newPath = this.getPathDataArray(\n          this.state.collaboratorStroke,\n          message.thickness,\n          message.color,\n        );\n\n        this.setState(prevState => ({\n          ...prevState,\n          collaboratorStroke: [],\n        }));\n        this.canvas.addPath(newPath);\n\n        break;\n      // User receives a generated image broadcasted from another user\n      case messageKinds.MESSAGE_GENERATE:\n        console.log('got generate mesage here', message);\n        this.setState(prevState => ({\n          ...prevState,\n          generatedImageData: message.imageData,\n          displayedImageData: message.imageData,\n        }));\n        break;\n      // User received a stylized image broadcasted from another user\n      case messageKinds.MESSAGE_STYLIZE:\n        console.log('iamge staylzize', message);\n        this.setState(prevState => ({\n          ...prevState,\n          style: message.style,\n          stylizedImageData: message.imageData,\n          displayedImageData: message.imageData,\n        }));\n        break;\n    }\n  };\n\n\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View style={styles.drawGroup}>\n            {/* Main canvas */}\n            <DrawCanvas\n              ref=\"drawCanvasRef\"\n              style={{flex: 1}}\n              thickness={this.state.thickness}\n              color={this.state.color}\n              socket={socket}\n            />\n\n            <View style={styles.toolGroup}>\n              {/* Thickness slider */}\n              <View style={styles.strokeGroup}>\n                <Text\n                  style={{\n                    color: '#07235c',\n                    fontWeight: 'bold',\n                    fontSize: device.height * 0.023,\n                  }}>\n                  Stroke size:\n                </Text>\n                <Slider\n                  style={{\n                    width: device.width * 0.15,\n                    height: device.height * 0.03,\n                    marginBottom: 10,\n                  }}\n                  minimumValue={1}\n                  maximumValue={\n                    device.width * device.height * (1 / Math.pow(10, 4))\n                  }\n                  minimumTrackTintColor=\"#000000\"\n                  maximumTrackTintColor=\"#000000\"\n                  onSlidingComplete={this.handleThickness}\n                />\n              </View>\n\n              <View style={styles.tempButtons}>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#073ead\" title=\"undo!\" />\n                </View>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#073ead\" title=\"redo!\" />\n                </View>\n                <View\n                  style={{justifyContent: 'flex-end', paddingHorizontal: 5}}>\n                  <Button color=\"#07235c\" title=\"erase\" />\n                </View>\n              </View>\n            </View>\n          {/* Color palette buttons */}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <View style={{flexDirection: 'row'}}>\n              {colorMap.colors.map(obj => {\n                return (\n                  <View style={{margin: 2}}>\n                    <TouchableOpacity\n                      style={[\n                        styles.functionButton,\n                        {backgroundColor: obj.color},\n                      ]}\n                      onPress={() => {\n                        this.setState({color: obj.color});\n                      }}>\n                      <Text\n                        style={{\n                          color: 'white',\n                          fontSize: device.height * 0.025,\n                        }}>\n                        {obj.label}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n            <Text style={{marginRight: 8, fontSize: device.height * 0.025}}>\n              {this.state.message}\n            </Text>\n          </View>\n          {/* Style buttons */}\n          <View\n            style={{\n              flexDirection: 'row',\n              justifyContent: 'space-around',\n              alignItems: 'center',\n            }}>\n            <View style={{flexDirection: 'row'}}>\n              {/* None style button */}\n              <View style={{margin: 2}}>\n                <TouchableOpacity\n                  style={[styles.functionButton, {backgroundColor: 'gray'}]}\n                  onPress={() => {\n                    this.setState(prevState => ({\n                      ...prevState,\n                      displayedImageData: this.state.generatedImageData,\n                    }));\n                  }}>\n                  <Text style={{color: 'white', fontSize: 20}}> None </Text>\n                </TouchableOpacity>\n              </View>\n              {/* Programmatically render all style options */}\n              {styleTransferOptions.styles.map(obj => {\n                return (\n                  <View style={{margin: 2}}>\n                    <TouchableOpacity\n                      style={[styles.functionButton, {backgroundColor: 'gray'}]}\n                      onPress={() => {\n                        this.sendRequestStyleHelper(obj.name);\n                      }}>\n                      <Text\n                        style={{\n                          color: 'white',\n                          fontSize: device.height * 0.024,\n                        }}>\n                        {obj.label}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                );\n              })}\n            </View>\n            <Text style={{marginRight: 8, fontSize: device.height * 0.024}}>\n              {this.state.message}\n            </Text>\n          </View>\n        </View>\n\n        <View style={styles.genGroup}>\n          {/* Displayed image */}\n          <View style={styles.generatedImageBox}>\n            {this.state.displayedImageData != null ? (\n              <Image\n                style={styles.generatedImage}\n                source={{uri: this.state.displayedImageData}}\n              />\n            ) : null}\n          </View>\n          {/* Generate button */}\n          <View style={styles.genButton}>\n            <Button\n              color=\"#841584\"\n              title=\"Generate!\"\n              onPress={this.grabPixels.bind(this)}\n            />\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    backgroundColor: 'skyblue',\n    paddingTop: device.height * 0.02,\n  },\n\n  drawBox: {\n    backgroundColor: 'white',\n    borderColor: 'lightblue',\n    borderWidth: 10,\n    width: device.width * 0.5,\n    height: device.height * 0.85,\n  },\n  generatedImageBox: {\n    borderWidth: 10,\n    borderColor: 'lightblue',\n\n    width: device.width * 0.45,\n    height: device.height * 0.85,\n  },\n  generatedImage: {\n    width: device.width * 0.45,\n    height: device.height * 0.85,\n  },\n  functionButton: {\n    padding: 4,\n    borderRadius: 5,\n  },\n  drawGroup: {\n    flexDirection: 'column',\n  },\n  genGroup: {\n    flexDirection: 'column',\n  },\n  genButton: {\n    height: 60,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  strokeGroup: {\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  tempButtons: {\n    height: 40,\n    width: 70,\n    flexDirection: 'row',\n  },\n  toolGroup: {\n    flexDirection: 'row',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}