{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Canvas from 'react-native-canvas';\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleCanvas = function (canvas) {\n      var ctx = canvas.getContext('2d');\n      ctx.fillStyle = 'purple';\n      ctx.fillRect(0, 0, 100, 100);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }\n      }, \"\\\"Hello\\\"\"), React.createElement(Canvas, {\n        ref: this.handleCanvas,\n        style: {\n          \"backgroundColor\": \"white\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 15\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };","map":{"version":3,"sources":["/mnt/427bdd3d-17db-4d44-b722-f3e4fd35d808/projects/gauGAN/hai-art/client-expo/App.js"],"names":["React","Component","Canvas","App","handleCanvas","canvas","ctx","getContext","fillStyle","fillRect"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;IAEqBC,G;;;;;;;;;;;;;;;;UAEnBC,Y,GAAe,UAACC,MAAD,EAAY;AACzB,UAAMC,GAAG,GAAGD,MAAM,CAACE,UAAP,CAAkB,IAAlB,CAAZ;AACAD,MAAAA,GAAG,CAACE,SAAJ,GAAgB,QAAhB;AACAF,MAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgB,CAAhB,EAAmB,GAAnB,EAAwB,GAAxB;AACD,K;;;;;;;WAED,kBAAS;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEQ,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAE,KAAKL,YAAlB;AAAgC,QAAA,KAAK,EAAE;AAAC,6BAAkB;AAAnB,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFR,CADF;AAMD;;;;EAf8BH,S;;SAAZE,G","sourcesContent":["import React, { Component } from 'react';\nimport {View, Text} from 'react-native';\nimport Canvas from 'react-native-canvas';\n \nexport default class App extends Component {\n \n  handleCanvas = (canvas) => {\n    const ctx = canvas.getContext('2d');\n    ctx.fillStyle = 'purple';\n    ctx.fillRect(0, 0, 100, 100);\n  }\n \n  render() {\n    return (\n      <View>\n        <Text>\"Hello\"</Text>\n              <Canvas ref={this.handleCanvas} style={{\"backgroundColor\":\"white\"}}/>\n      </View>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}